name: Deploy Aquabot

on:
  push:
    branches:
      - master
  release:
    types: [published]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up SSH
      id: setup_ssh
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Set Docker image tag
      run: echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV

    - name: Generate .env file
      run: |
        echo DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} > .env
        echo GUILD_ID=${{ secrets.GUILD_ID }} >> .env
        echo IMAGE_TAG=${{ env.IMAGE_TAG }} >> .env
      
    
    - name: Sync files to server
      env:
        RSYNC_RSH: "ssh -o StrictHostKeyChecking=no"
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" . root@${{ secrets.SERVER_IP }}:/opt/aquabot

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: root
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          cd /opt/aquabot
          docker-compose down
          docker-compose pull
          sudo docker-compose build --build-arg IMAGE_TAG=${{ env.IMAGE_TAG }}
          sudo docker-compose up -d
          docker image prune -af
    - name: Notify Discord
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
      with:
        args: 'Aquabot успешно развернут! Версия: ${{ env.IMAGE_TAG }}'
